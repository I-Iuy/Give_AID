@model List<Fe.DTOs.Notification.UserNotificationDto>

@{
    ViewData["Title"] = "Notification History";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <h2 class="mb-4">Sent Notification History</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">No notifications have been sent yet.</div>
    }
    else
    {
        <table class="table table-bordered table-striped" id="notificationHistoryTable">
            <thead class="table-dark">
                <tr>
                    <th>Notification ID</th>
                    <th>Account ID</th>
                    <th>Title</th>
                    <th>Message</th>
                    <th>Sent At</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="notification-@item.NotificationId">
                        <td>@item.NotificationId</td>
                        <td>@item.AccountId</td>
                        <td>@item.Title</td>
                        <td>@item.Message</td>
                        <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            @if (item.IsRead)
                            {
                                <span class="badge bg-success">Read</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Unread</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-danger btn-sm delete-notification" data-id="@item.NotificationId">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @* Pagination Controls *@
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @* Previous Page Button *@
            <li class="page-item @(ViewBag.PageNumber <= 1 ? "disabled" : "")">
                <a class="page-link" asp-area="Admin" asp-controller="Notification" asp-action="History" asp-route-pageNumber="@(ViewBag.PageNumber - 1)" asp-route-pageSize="@(ViewBag.PageSize)">Previous</a>
            </li>

            @* Page Number Links *@
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.PageNumber ? "active" : "")">
                    <a class="page-link" asp-area="Admin" asp-controller="Notification" asp-action="History" asp-route-pageNumber="@i" asp-route-pageSize="@(ViewBag.PageSize)">@i</a>
                </li>
            }

            @* Next Page Button *@
            <li class="page-item @(ViewBag.PageNumber >= ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-area="Admin" asp-controller="Notification" asp-action="History" asp-route-pageNumber="@(ViewBag.PageNumber + 1)" asp-route-pageSize="@(ViewBag.PageSize)">Next</a>
            </li>
        </ul>
    </nav>

</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Add event listener to delete buttons
            const deleteButtons = document.querySelectorAll('.delete-notification');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async function () {
                    const notificationId = this.dataset.id;
                    if (confirm('Are you sure you want to delete this notification?')) {
                        try {
                            const response = await fetch(`/api/notification/${notificationId}`, {
                                method: 'DELETE'
                            });

                            if (response.ok) {
                                // Remove the row from the table on success
                                const row = document.getElementById(`notification-${notificationId}`);
                                if (row) {
                                    row.remove();
                                }
                                // Optional: Display a success message (can add a div for alerts similar to Subscribers page)
                                console.log('Notification deleted successfully.');
                                // Note: For a production app with pagination, you might need to re-fetch the current page
                                // or adjust the row count/pagination links dynamically after deletion.
                            } else if (response.status === 404) {
                                console.error('Notification not found.');
                            } else {
                                console.error('Failed to delete notification.', response.statusText);
                            }
                        } catch (error) {
                            console.error('Error deleting notification:', error);
                        }
                    }
                });
            });
        });
    </script>
}
