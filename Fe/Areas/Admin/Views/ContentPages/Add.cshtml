@using Newtonsoft.Json
@model Fe.DTOs.ContentPages.ContentPageDto

@{
    ViewData["Title"] = "Add Page"; // Set page title for browser and layout
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml"; // Use shared layout in Admin area
}

<!-- Main container for the Add Content Page screen -->
<div class="container-fluid px-4">

    <!-- Page heading -->
    <h1 class="mt-4">Add New Page</h1>

    <!-- Breadcrumb navigation -->
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item">
            <a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
        </li>
        <li class="breadcrumb-item">
            <a asp-area="Admin" asp-controller="ContentPages" asp-action="List">Content Pages</a>
        </li>
        <li class="breadcrumb-item active">Add</li>
    </ol>

    <!-- Card container for form -->
    <div class="card shadow mb-4">

        <!-- Card header with icon and title -->
        <div class="card-header bg-primary text-white">
            <i class="fas fa-file-alt me-1"></i> Create New Content Page
        </div>

        <!-- Card body: form content -->
        <div class="card-body">

            <!-- Form to add a new content page -->
            <form asp-action="Add" method="post" onsubmit="updateContent()">

                <!-- Page Title input -->
                <div class="mb-3">
                    <label asp-for="Title" class="form-label">Page Title</label>
                    <input asp-for="Title" class="form-control" placeholder="Enter page title" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <!-- Rich text editor for page content -->
                <div class="mb-3">
                    <label class="form-label">Page Content</label>

                    <!-- Quill editor UI -->
                    <div id="quillEditor" style="height: 250px;"></div>

                    <!-- Hidden input to bind editor content to model -->
                    <input type="hidden" name="Content" id="descriptionInput" asp-for="Content" />
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <!-- Action buttons -->
                <div class="d-flex justify-content-end">
                    <!-- Submit button -->
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-save me-1"></i> Save
                    </button>

                    <!-- Reset form button -->
                    <button type="reset" class="btn btn-secondary">
                        <i class="fas fa-undo me-1"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Include scripts only for this view -->
@section Scripts {
    <!-- Load Quill.js editor library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />

    <script>
        var quill;

        // Initialize Quill editor after page is fully loaded
        document.addEventListener("DOMContentLoaded", function () {
            quill = new Quill('#quillEditor', {
                theme: 'snow',
                placeholder: 'Write your content here...',
                modules: {
                    toolbar: [
                        ['image'],
                        [{ header: [1, 2, false] }],
                        ['bold', 'italic', 'underline'],
                        [{ list: 'ordered' }, { list: 'bullet' }],
                        ['clean']
                    ]
                }
            });

            // Set initial editor content from model (HTML-decoded)
            var initialContent = @Html.Raw(JsonConvert.SerializeObject(Model?.Content ?? ""));
            quill.root.innerHTML = initialContent;
        });

        // On form submit: copy content from editor to hidden input
        function updateContent() {
            document.getElementById('descriptionInput').value = quill.root.innerHTML;
            return true;
        }
    </script>
}
